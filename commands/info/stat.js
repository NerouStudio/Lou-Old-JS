const config = require('../../config.js')
const BaseCommand = require("../../core/Command");
const discord = require('discord.js')
const { QuickDB } = require('quick.db');
const db = new QuickDB();

module.exports = class Example extends BaseCommand {
    name = 'stat';
    aliases = ['Bot', 'Stat', 'bot', 'state', 'statistic', '—Å—Ç–∞—Ç–∞', '–±–æ—Ç', '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'];
    description = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ';
    type = [discord.ApplicationCommandType.ChatInput, 'text'];
    bot_permissions = [];
    user_permissions = [];
    options = [];
    components_ids = [];
    cooldown = 5;
    async execute(client, interaction, options) {

        const totalGuilds = client.guilds.cache.size;
        const totalUsers = client.guilds.cache.reduce((acc, guild) => acc + guild.memberCount, 0);
        const ping = client.ws.ping;

        const button = new discord.ButtonBuilder()
            .setURL('https://discord.com/invite/G686uM7KWQ')
            .setLabel('–ü–æ–¥–¥–µ—Ä–∂–∫–∞')
            .setEmoji(`üõ°`)
            .setStyle(discord.ButtonStyle.Link);
        const button1 = new discord.ButtonBuilder()
            .setURL('https://neroustudio.ru/')
            .setLabel('–°–∞–π—Ç')
            .setEmoji(`üìó`)
            .setStyle(discord.ButtonStyle.Link);
        const buttons = new discord.ActionRowBuilder()
            .addComponents(button)
            .addComponents(button1);

        const embed = new discord.EmbedBuilder()
            .setColor('#0099ff')
            .setTitle('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞')
            .setThumbnail(client.user.displayAvatarURL())
            .addFields(
                { name: '–°–µ—Ä–≤–µ—Ä–æ–≤', value: `${totalGuilds}`, inline: true },
                { name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', value: `${totalUsers}`, inline: true },
                { name: '–ü–∏–Ω–≥', value: `${ping}ms`, inline: true },
            )
            .setTimestamp()
            .setFooter({ text: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞' });

        await interaction.reply({ embeds: [embed], components: [buttons] })

    }
}